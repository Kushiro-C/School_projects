# Projet LOA-M1-2021-2022

### Sujet n°3 (Le jeu)

Membres du groupe :

Patrick Chang 71802046
Vincent Du    71801856

---

## Installation / Compilation

Pour compiler le projet, dans un terminal tapez :

`make`

Puis pour lancer une partie, faire

`./main`

## Quelques tests...

Il y a quelques tests écrits à la main dans un fichier `tester.cpp`

Pour l'exécuter, il faut entrer dans un terminal

`make test`

## Les commandes du jeu

Après avoir lancé le jeu avec `./main`

Vous serez présenté avec des informations à chaque moment du jeu,
 et des choix où il faudra entrer le nombre qui
 est entre parenthèses, correspondant à votre choix.

Par exemple s'il est marqué :

`(2) Faire une jolie action`

Vous entrerez dans votre terminal, tout simplement : `2`

Pour les déplacements (Choix d'Action '4'), nous avons décidé
 d'attribuer aux directions Ouest, Sud, Est, Nord respectivement
 les valeurs 1, 2, 3, 5 (Pas de 4), ce qui est plus intuitif lors
 des déplacements avec un pavé numérique.
 Le chiffre 6 représente l'action "Ne pas se déplacer et termine le tour".

Petite Astuce, pour voir son inventaire on peut voir les objets
 qu'on peut poser (Choix d'Action '3')

---


## Présentation du jeu

Dans ce jeu, nous jouons un personnage dans un château carré,
 qui a 5*5 pièces pour un total de 25 pièces.
Dans chaque pièce du château se trouve des portes vers les
 4 points cardinaux : Nord, Est, Sud, Ouest.
Ces portes sont toutes ouvertes, sauf pour les pièces
 dans les côtés extrêmes du château.
Chaque pièce peut contenir des joueurs ou des objets par terre.
Ces objets peuvent être des équipements qui améliorent les statistiques
 des joueurs, ou bien des potions de soin comme de poison, ou encore
 des clés qui permettent de se téléporter quelque part.

Ceci est un jeu solitaire, où pour gagner, il faut que l'utilisateur
 soit le dernier survivant du château.
Seuls 4 personnages habitent dans ce château.
Un score est calculé, qui augmente de 1 par combat gagné.
Chaque joueur ne peut se déplacer que d'une pièce par tour,
 ou bien choisir de ne pas se déplacer.
La partie continue tant que l'utilisateur n'est pas le seul survivant.
Les combats sont automatiques, et s'enclenchent lorsque au moins 2
 personnes se trouvent dans une même pièce, et seul 1 personne peut
 en sortir vivant.


## Présentation des classes

La classe `Objet` est héritée par les classes :
`Bouteille`, `Cle`, `Equipement`.
Une bouteille est une potion, qui peut être de soin (soin personnels),
 ou bien de poison (dégâts contre ennemis).
Une clé permet de se téléporter quelque part dans le château.
Un équipement permet d'augmenter les statistiques d'un personnage.

Nous avons une classe `Personnage` qui représente les personnages
 contrôlés par l'utilisateur (vous), ainsi que l'ordinateur.
Il y a 4 classes qui héritent de `Personnage`, qui sont :
`Amazone`, `Guerrier`, `Moine`, `Sorciere`.
Ces classes ont des caractéristiques différentes, et commencent
 la partie avec des objets différents.
Chaque personnage a un sac qui peut contenir jusqu'à 4 objets.

Une classe `Conteneur` englobe les 2 classes `Objet` et `Personnage`.
Une pièce du château contient des conteneurs, qui peuvent être soit
 des objets, soit des personnages.

La classe `Partie` comme son nom l'indique, permet de gérer une partie.
C'est ici qu'on stocke les pièces du château, ainsi que chaque
 personnage et objet.
Dans ces pièces, l'utilisateur peut décider de ramasser des objets
 s'il y en a dans sa pièce, ou bien de déposer des objets.
Il peut également utiliser des objets de son petit inventaire.
Chaque action est demandée à l'utilisateur, mais les combats sont
 totalement automatiques, et basés sur la chance.
L'usage des potions pendant un combat est également possible,
 et celles si sont utilisées à des moments aléatoires.


Les fichiers `main.cpp` et `tester.cpp` sont à part.
Le premier est le 'launcher' de la partie, il lance une partie
 pour l'utilisateur, afin de pouvoir jouer au jeu.
Le second fichier est constitué de quelques tests à la main,
 qui contient des tests d'affichage pour des parties clées
 des classes principales.


## Extension

Nous avons décidé de rajouter l'extension de sauvegarde de partie.
On peut alors sauvegarder une partie en cours à tout moment,
 et donc la quitter, puis reprendre la partie au démarrage du jeu
 si l'on le souhaite.
On suppose néanmoins que personne n'essaye de modifier à la main
 les données sauvegardées dans un fichier, et que l'écriture dans
 le fichier de sauvegarde est strictement effectué par le jeu.

Le fichier avec les données sauvegardées est `gameData.txt`
